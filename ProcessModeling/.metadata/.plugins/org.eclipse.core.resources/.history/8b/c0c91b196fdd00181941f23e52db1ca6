package dunbar.parker.csc370.surgery;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class ServiceProvider {
	public final static int SIM_CLOCK_TICKS = 5000;
	public int currentClockTick = 0;
	public static Random random = new Random();
	

	public void run() {
		List<Patient> future = createFutureEvents();
		List<Patient> current = new ArrayList<Patient>();
		List<Patient> past = new ArrayList<Patient>();
		
		
		while (currentClockTick <= SIM_CLOCK_TICKS) {
			if (future.size() != 0) {
				current.add(future.remove(0));
			}
			for (Patient c : current) {
//				checkForUpdate(c);
			}
			if (current.size() != 0) {
				past.add(current.remove(0));
			}
		}
		
		System.out.println("Customers served: " + past.size());
		System.out.println("Customers kicked out at end of the day: " + future.size());
		
		double averageWait = 0;
		for(Patient c : past) {
			averageWait += c.getWaitTime();
		}
		double average = averageWait / past.size();
		System.out.println("Average wait time: " + average);
	}


	private static List<Patient> createFutureEvents() {
		List<Patient> patients = new ArrayList<Patient>();
		int arrival = 0;
		int patientId = 0;
		while (arrival < SIM_CLOCK_TICKS) {
			// Interval
			int interval = (int) (-Math.log(1 - random.nextDouble()) * 60);
			arrival += interval;
//			System.out.println("PATIENT: " + customerId);
//			System.out.println("INTERVAL: " + interval);
//			System.out.println("ARRIVAL: " + arrival);

			// Service
			int service = (int) (-Math.log(1 - random.nextDouble()) * 45);
//			System.out.println("SURGERY_TIME: " + service);

			patients.add(new Patient(patientId, arrival, service));
			patientId++;
		}
		return patients;
	}
}
